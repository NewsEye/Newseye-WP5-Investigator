[{"utility_name": "extract_facets", "utility_description": "Examines the document set given as input, and finds all the different facets for which values have been set in at least some of the documents.", "utility_parameters": [], "input_type": "search_query", "output_type": "facet_list"}, {"utility_name": "common_facet_values", "utility_description": "Sorts the facet values for facet_name by decreasing number of matching documents and returns the n most common facet values and their document counts", "utility_parameters": [{"parameter_name": "n", "parameter_description": "The number of facet values to be included in the result. 0 means all", "parameter_type": "integer", "parameter_default": 5, "parameter_is_required": false}, {"parameter_name": "facet_name", "parameter_description": "The name of the facet to be analysed, e.g. PUB_YEAR", "parameter_type": "string", "parameter_default": "PUB_YEAR", "parameter_is_required": false}], "input_type": "facet_list", "output_type": "topic_list"}, {"utility_name": "generate_time_series", "utility_description": "", "utility_parameters": [{"parameter_name": "facet_name", "parameter_description": "the facet to be analysed", "parameter_type": "string", "parameter_default": "NEWSPAPER_NAME", "parameter_is_required": false}], "input_type": "search_query", "output_type": "time_series"}, {"utility_name": "find_steps_from_time_series", "utility_description": "Finds steps from a time series data using a wavelet transform multiscale product", "utility_parameters": [{"parameter_name": "step_threshold", "parameter_description": "Not yet written", "parameter_type": "float", "parameter_default": null, "parameter_is_required": false}, {"parameter_name": "column_name", "parameter_description": "Not yet written", "parameter_type": "string", "parameter_default": null, "parameter_is_required": false}], "input_type": "time_series", "output_type": "step_list"}, {"utility_name": "extract_document_ids", "utility_description": "Examines the document set given as input, and extracts the document_ids for each of the documents.", "utility_parameters": [], "input_type": "search_query", "output_type": "id_list"}, {"utility_name": "query_topic_model", "utility_description": "Queries the selected topic model.", "utility_parameters": [{"parameter_name": "model_type", "parameter_description": "The type of the topic model to use", "parameter_type": "string", "parameter_default": null, "parameter_is_required": true}, {"parameter_name": "model_name", "parameter_description": "The name of the topic model to use. If this is not specified, the system will use the first model offered by the topic modelling API.", "parameter_type": "string", "parameter_default": null, "parameter_is_required": false}], "input_type": "id_list", "output_type": "topic_analysis"}, {"utility_name": "extract_words", "utility_description": "collects doc->words information from a set of documents", "utility_parameters": [{"parameter_name": "min_count", "parameter_description": "Minimal word count for word to be returned", "parameter_type": "integer", "parameter_default": 20, "parameter_is_required": false}], "input_type": "id_list", "output_type": "word_counts"}, {"utility_name": "make_basic_stats", "utility_description": "Computes basic statistics for a given corpus: word counts, etc.", "utility_parameters": [], "input_type": "word_search", "output_type": "stats"}, {"utility_name": "compute_tf_idf", "utility_description": "computes TfIdf to compare given subcorpus to a whole corpus", "utility_parameters": [{"parameter_name": "interest_thr", "parameter_description": "Threshold for tfidf to be considered interesting. Value is interesting if value-mean > interest_thr*stabdard_deviation", "parameter_type": "float", "parameter_default": 1, "parameter_is_required": false}, {"parameter_name": "languages", "parameter_description": "use only documents written in this languages", "parameter_type": "string", "parameter_default": null, "parameter_is_required": false}], "input_type": "word_counts", "output_type": "tf_idf"}, {"utility_name": "tm_document_linking", "utility_description": "Find similar documents using topic models", "utility_parameters": [{"parameter_name": "num_docs", "parameter_description": "Number of document IDs to return", "parameter_type": "integer", "parameter_default": 3, "parameter_is_required": false}], "input_type": "id_list", "output_type": "id_list_with_dist"}]