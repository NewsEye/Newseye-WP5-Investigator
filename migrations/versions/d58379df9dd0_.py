"""empty message

Revision ID: d58379df9dd0
Revises: 
Create Date: 2019-12-13 10:09:00.245156

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd58379df9dd0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dataset_name', name='uq_dataset_name')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('solr_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('solr_id', name='uniq_solr_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('dataset_operations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operation', sa.String(length=255), nullable=True),
    sa.Column('search_query', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('documents', sa.String(length=255), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('processor', sa.String(length=255), nullable=True),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('processor', 'parameters', 'dataset_id', name='uq_processor_parameters_dataset')
    )
    op.create_table('results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('interestingness', sa.JSON(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('result_id', sa.Integer(), nullable=True),
    sa.Column('report_language', sa.String(length=255), nullable=True),
    sa.Column('report_format', sa.String(length=255), nullable=True),
    sa.Column('report_content', sa.JSON(), nullable=True),
    sa.Column('report_generated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['result_id'], ['results.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('force_refresh', sa.Boolean(), nullable=True),
    sa.Column('task_status', sa.String(length=255), nullable=True),
    sa.Column('task_started', sa.DateTime(), nullable=True),
    sa.Column('task_finished', sa.DateTime(), nullable=True),
    sa.Column('result_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['result_id'], ['results.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_instances')
    op.drop_table('reports')
    op.drop_table('results')
    op.drop_table('tasks')
    op.drop_table('dataset_operations')
    op.drop_table('users')
    op.drop_table('document')
    op.drop_table('dataset')
    # ### end Alembic commands ###
