"""empty message

Revision ID: 33bbb70ea77e
Revises: 4282f42fcc3d
Create Date: 2019-07-23 13:50:55.176763

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '33bbb70ea77e'
down_revision = '4282f42fcc3d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reports', sa.Column('task_id', sa.Integer(), nullable=True))
    op.drop_constraint('reports_task_uuid_fkey', 'reports', type_='foreignkey')
    op.create_foreign_key(None, 'reports', 'tasks', ['task_id'], ['id'])
    op.drop_column('reports', 'task_uuid')
    op.add_column('results', sa.Column('task_id', sa.Integer(), nullable=True))
    op.drop_constraint('results_task_uuid_fkey', 'results', type_='foreignkey')
    op.create_foreign_key(None, 'results', 'tasks', ['task_id'], ['id'])
    op.drop_column('results', 'task_uuid')
    op.add_column('task_instances', sa.Column('task_id', sa.Integer(), nullable=True))
    op.add_column('task_instances', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'task_instances', ['uuid'])
    op.drop_constraint('task_instances_task_uuid_fkey', 'task_instances', type_='foreignkey')
    op.drop_constraint('task_instances_target_uuid_fkey', 'task_instances', type_='foreignkey')
    op.drop_constraint('task_instances_hist_parent_id_fkey', 'task_instances', type_='foreignkey')
    op.create_foreign_key(None, 'task_instances', 'task_instances', ['target_uuid'], ['uuid'])
    op.create_foreign_key(None, 'task_instances', 'tasks', ['task_id'], ['id'])
    op.create_foreign_key(None, 'task_instances', 'task_instances', ['hist_parent_id'], ['uuid'])
    op.drop_column('task_instances', 'task_uuid')
    op.drop_constraint('tasks_uuid_key', 'tasks', type_='unique')
    op.drop_column('tasks', 'uuid')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False))
    op.create_unique_constraint('tasks_uuid_key', 'tasks', ['uuid'])
    op.add_column('task_instances', sa.Column('task_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'task_instances', type_='foreignkey')
    op.drop_constraint(None, 'task_instances', type_='foreignkey')
    op.drop_constraint(None, 'task_instances', type_='foreignkey')
    op.create_foreign_key('task_instances_hist_parent_id_fkey', 'task_instances', 'tasks', ['hist_parent_id'], ['uuid'])
    op.create_foreign_key('task_instances_target_uuid_fkey', 'task_instances', 'tasks', ['target_uuid'], ['uuid'])
    op.create_foreign_key('task_instances_task_uuid_fkey', 'task_instances', 'tasks', ['task_uuid'], ['uuid'])
    op.drop_constraint(None, 'task_instances', type_='unique')
    op.drop_column('task_instances', 'uuid')
    op.drop_column('task_instances', 'task_id')
    op.add_column('results', sa.Column('task_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'results', type_='foreignkey')
    op.create_foreign_key('results_task_uuid_fkey', 'results', 'tasks', ['task_uuid'], ['uuid'])
    op.drop_column('results', 'task_id')
    op.add_column('reports', sa.Column('task_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.create_foreign_key('reports_task_uuid_fkey', 'reports', 'tasks', ['task_uuid'], ['uuid'])
    op.drop_column('reports', 'task_id')
    # ### end Alembic commands ###
